#lang planet neil/sicp
(define (same-parity x . y)
  (get-same (remainder x 2)
            y
            (cons x nil)))
(define (get-same rmd l acc)
  (if (null? l)
     acc
     (let ((head (car l))
           (tail (cdr l))
           (new-acc (if (= (remainder (car l) 2)
                           rmd)
                        (cons (car l) acc )
                        acc))) 
         (get-same rmd tail new-acc))))